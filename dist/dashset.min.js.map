{"version":3,"sources":["webpack:///webpack/bootstrap 1279933d195b7c0e08f5","webpack:///./src/typesettable.coffee","webpack:///./src/measure-text.coffee","webpack:///./src/font.coffee","webpack:///./src/image-node.coffee","webpack:///./src/line.coffee","webpack:///./src/text-node.coffee","webpack:///./src/spacer.coffee","webpack:///./src/index.coffee","webpack:///./src/context.coffee","webpack:///./src/paragraph-node.coffee"],"names":[],"mappings":"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","file":"dashset.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 1279933d195b7c0e08f5","module.exports =\nclass Typesettable\n  constructor: ->\n    @width = 0\n    @height = 0\n    @lineHeight = 0\n    @context = null\n\n  typeset: ->\n    @width = 0\n    @height = 0\n    @lineHeight = 0\n\n\n\n// WEBPACK FOOTER //\n// ./src/typesettable.coffee","ctx = null\n\nif typeof document isnt 'undefined'\n  ctx = document.createElement('canvas').getContext '2d'\n\ncustomMeasurer = null\n\nmodule.exports = (text, font) ->\n  return customMeasurer(text, font) if customMeasurer\n  return text.length if not ctx\n  ctx.font = font.toString()\n  return ctx.measureText(text).width\n\nmodule.exports.setCustomMeasurer = (fn) ->\n  customMeasurer = fn\n\nmodule.exports.getCustomMeasurer = () -> customMeasurer\n\n\n\n// WEBPACK FOOTER //\n// ./src/measure-text.coffee","module.exports =\nclass Font\n  constructor: ->\n    @style = 'normal'\n    @variant = 'normal'\n    @weight = 400\n    @stretch = 'normal'\n    @size = 16\n    @family = 'serif'\n\n  toString: ->\n    \"#{@style} #{@variant} #{@weight} #{@stretch} #{@size}px #{@family}\"\n\n\n\n// WEBPACK FOOTER //\n// ./src/font.coffee","Typesettable = require './typesettable'\n\nmodule.exports =\nclass ImageNode extends Typesettable\n  constructor: (context, properties) ->\n    super()\n\n    @context = context if context?\n    @src = properties?.src ? ''\n    @imageWidth = properties?.width ? 0\n    @imageHeight = properties?.height ? 0\n    @style = properties?.style ? 0\n\n    @type = 'image'\n\n  copyFrom: (imageNode) ->\n    for own value, key of imageNode\n      @[key] = value\n\n  typeset: ->\n    switch @style\n      when 0, 1\n        @width = @imageWidth\n        @height = @imageHeight\n\n        if @width > @context.width\n          @height *= @context.width / @width\n          @width = @context.width\n\n        if @height > @context.height\n          @width *= @context.height / @height\n          @height = @context.height\n      when 2\n        @height = @context.fontSize\n        @width = @imageWidth * (@context.fontSize / @imageHeight)\n\n    @lineHeight = @context.fontSize\n\n\n\n// WEBPACK FOOTER //\n// ./src/image-node.coffee","module.exports =\nclass Line\n  constructor: (context) ->\n    @context = context\n    @width = 0\n    @height = 0\n    @content = []\n    @source = null\n    @lastInParagraph = no\n    @margin = no\n\n    @type = 'line'\n\n    Object.defineProperty this, 'length',\n      get: -> @content.length\n\n  update: ->\n    @width = (node.width for node in @content).reduce ((a, b) -> a + b), 0\n    @height = Math.max (node.height + node.lineHeight * (@context.lineHeight - 1) for node in @content)...\n\n  append: (child) ->\n    @content.push child if not (child in @content)\n    @update()\n\n\n\n// WEBPACK FOOTER //\n// ./src/line.coffee","Typesettable = require './typesettable'\nFont = require './font'\n\nmodule.exports =\nclass TextNode extends Typesettable\n  constructor: (context, properties) ->\n    super()\n\n    @context = context if context?\n    @bold = properties?.bold ? false\n    @italic = properties?.italic ? false\n    @size = properties?.size ? 1\n    @code = properties?.code ? false\n    @smallcaps = properties?.smallcaps ? false\n    @sup = properties?.sup ? []\n    @content = properties?.content ? ''\n    @data = {}\n\n    # formatting metadata\n    @hyphen = properties?.hyphen ? no\n    @hyphenEnabled = properties?.hyphenEnabled ? no\n    @exceptStart = properties?.exceptStart ? no\n\n    @type = 'text'\n\n  copyFrom: (textNode) ->\n    for own value, key of textNode\n      @[key] = prop\n\n  getFont: ->\n    font = new Font\n    font.weight = @context.boldWeight if @bold\n    font.style = 'italic' if @italic\n    if not @code\n      font.size = @size * @context.fontSize\n      font.family = @context.fontFamily\n    else\n      font.size = @size * @context.codeFontSize\n      font.family = @context.codeFontFamily\n    font.variant = 'small-caps' if @smallcaps\n\n    font\n\n  typeset: ->\n    content = @content\n    content += '-' if @hyphenEnabled\n\n    font = @getFont()\n    @width = @context.measureText content, font\n    @height = @lineHeight = font.size\n\n\n\n// WEBPACK FOOTER //\n// ./src/text-node.coffee","module.exports =\nclass Spacer\n  constructor: (width, height) ->\n    @width = width\n    @height = height\n    @lineHeight = height\n\n    @type = 'spacer'\n\n\n\n// WEBPACK FOOTER //\n// ./src/spacer.coffee","module.exports =\n  Context: require './context'\n  Font: require './font'\n  ImageNode: require './image-node'\n  Line: require './line'\n  measureText: require './measure-text'\n  ParagraphNode: require './paragraph-node'\n  Spacer: require './spacer'\n  TextNode: require './text-node'\n  Typesettable: require './typesettable'\n\nwindow.dashset = module.exports if document and window\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.coffee","measureText = require './measure-text'\n\nmodule.exports =\nclass Context\n  constructor: (options) ->\n    options = {} if not options\n\n    @width = options.width ? 400\n    @height = options.height ? 400\n    @fontSize = options.fontSize ? 13\n    @lineHeight = options.lineHeight ? 1.5\n    @indentWidth = options.indentWidth ? 16\n    @doubleHeight = options.doubleHeight ? 1\n    @boldWeight = options.boldWeight ? 600\n    @fontFamily = options.fontFamily ? 'Baskerville, serif'\n    @codeFontSize = options.codeFontSize ? 12\n    @codeFontFamily = options.codeFontFamily ? 'Inconsolata, monospace'\n    @quotePadding =\n      top: options.quotePadding?.top ? 10\n      left: options.quotePadding?.left ? 10\n      right: options.quotePadding?.right ? 10\n      bottom: options.quotePadding?.bottom ? 10\n    @quoteMargin =\n      top: options.quoteMargin?.top ? 10\n      bottom: options.quoteMargin?.bottom ? 10\n\n  measureText: (args...) ->\n    measureText(args...)\n\n\n\n// WEBPACK FOOTER //\n// ./src/context.coffee","Typesettable = require './typesettable'\nLine = require './line'\nTextNode = require './text-node'\nImageNode = require './image-node'\nSpacer = require './spacer'\n\nmodule.exports =\nclass ParagraphNode extends Typesettable\n  constructor: (context, properties) ->\n    super()\n\n    @context = context if context?\n    @indent = properties?.indent ? false\n    @double = properties?.double ? false\n    @quote = properties?.quote ? false\n    @separator = properties?.separator ? false\n    @join = properties?.join ? false\n    @joinNext = properties?.joinNext ? false\n    @align = properties?.align ? 0\n    @list = properties?.list ? 0\n    @header = properties?.header ? 0\n    @split = properties?.split ? false\n    @content = []\n    @lines = []\n\n  copyFrom: (paragraphNode) ->\n    for own value, key of paragraphNode\n      @[key] = value\n\n  append: (child) ->\n    @content.push child if not (child in @content)\n\n  typeset: ->\n    line = new Line @context\n    line.source = this\n    lines = [line]\n\n    width = @context.width\n\n    if @quote and not @join\n      line.append new Spacer 0, @context.quoteMargin.top\n      line.margin = yes\n\n      line = new Line @context\n      line.source = this\n      lines.push line\n      line.append new Spacer 0, @context.quotePadding.top\n\n      line = new Line @context\n      line.source = this\n      lines.push line\n\n    if @double\n      doubleHeight = @context.doubleHeight * @context.fontSize\n      line.append new Spacer 0, doubleHeight\n      line = new Line @context\n      line.source = this\n      lines.push line\n\n    if @indent\n      line.append new Spacer @context.indentWidth, @context.fontSize\n\n    if @quote\n      width -= @context.quotePadding.left + @context.quotePadding.right\n      line.append new Spacer @context.quotePadding.left, 0\n\n    newLine = =>\n      if @quote\n        line.append new Spacer @context.quotePadding.right, 0\n\n      line = new Line @context\n      line.source = this\n      lines.push line\n\n      if @quote\n        line.append new Spacer @context.quotePadding.left, 0\n\n    previousNode = null\n    for node in @content\n      if node instanceof TextNode\n        node.hyphenEnabled = no\n\n      node.typeset()\n\n      if node instanceof ImageNode\n        if node.style is 1\n          # block style\n          if line.length isnt 0\n            newLine()\n          space = (@context.width - node.width) / 2\n          line.append new Spacer space, node.height\n          line.append node\n          line.append new Spacer space, node.height\n        else\n          if line.width + node.width > @context.width\n            newLine()\n          line.append node\n      else if node instanceof TextNode\n        if node.content is '\\n'\n          newLine()\n        else\n          if line.width + node.width > @context.width\n            if previousNode and previousNode.hyphen\n              previousNode.hyphenEnabled = yes\n\n              # typeset again with hyphen\n              # while this will increase the line width, it's probably\n              # negligible and can be compensated for by shrinking whitespace\n              # in the worst case\n              previousNode.typeset()\n              line.update()\n\n            newLine()\n          if line.length isnt 0 or not node.exceptStart\n            line.append node\n\n      previousNode = node\n\n    line.lastInParagraph = yes\n\n    if @quote and not @joinNext\n      line = new Line @context\n      line.source = this\n      lines.push line\n      line.append new Spacer 0, @context.quotePadding.bottom\n\n      line = new Line @context\n      line.source = this\n      lines.push line\n      line.append new Spacer 0, @context.quoteMargin.bottom\n      line.margin = yes\n\n    @lines = lines\n\n\n\n// WEBPACK FOOTER //\n// ./src/paragraph-node.coffee"],"sourceRoot":""}